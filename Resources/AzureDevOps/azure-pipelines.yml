variables:
  ArmTemplateRoot: '$(Build.SourcesDirectory)\Resources\ArmTemplates'
  SolutionBaseName: DFC.ServiceTaxonomy.Database

resources:
  repositories:
  - repository: self
  - repository: dfc-devops
    type: github
    name: SkillsFundingAgency/dfc-devops
    ref: refs/heads/NCSD-3001-SplitDockerBuildStepTemplates
    endpoint: 'GitHub (ESFA)'

trigger: 
  branches:
    include: 
    - master
  paths: 
    include:
    - Resources/Dockerfiles

pr:
  branches:
    include: 
    - master
  paths: 
    include:
    - Resources/Dockerfiles

stages:

- stage: Build
  variables:
    - group: KeyVault - dfc-dev-shared-kv
    - group: dfc-shared-dev

  jobs:
  - template: JobTemplates/BuildResources.yml
    parameters:
      ArmTemplateRoot: ${{ variables.ArmTemplateRoot }}
      SolutionBaseName: ${{ variables.SolutionBaseName }}
  - template: JobTemplates/BuildContainer.yml
    parameters:
      ContainerRegistryAdminUser: $(ContainerRegistryAdminUser)
      ContainerRegistryPassword: $(ContainerRegistryPassword)
      DockerfileContext: Resources/Dockerfiles
      DockerfileName: neo4jescodb.Dockerfile
      ImageBaseName: NCS.ServiceTaxonomy.EscoDb
      #TO DO: decide how to tag and publish image builds from branches
      ImageTag: $(Build.BuildNumber)
      SolutionBaseName: ${{ variables.SolutionBaseName }}

- stage: DeployToDev
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  variables:
    - group: dfc-shared-all
    - group: dfc-stax-shared-all
    - group: KeyVault - dfc-dev-shared-kv
    - group: dfc-shared-dev
    - group: dfc-stax-shared-dev
    - template: VariableTemplates\DevEnvironmentVariables.yml
  jobs:
  - template: JobTemplates/Deploy.yml
    parameters:
      AksResourceGroup: $(sharedResourceGroup)
      AzureSubscriptionEndpoint: 'SFA-CDH-Dev/Test (962cae10-2950-412a-93e3-d8ae92b17896)'
      CertificateSecretName: $(DatabaseCertificateSecretName)
      Environment: DEV_SERVICETAXONOMY
      EnvironmentTag: $(EnvironmentTag)
      KeyVaultName: $(sharedKeyVaultName)
      KubernetesCluster: $(sharedAksCluster)
      Neo4jPassword: $(Neo4jPassword)
      ParentBusinessTag: $(ParentBusiness)
      ResourceGroup: $(ResourceGroup)
      ServiceOfferingTag: $(ServiceOffering)
      SolutionBaseName: ${{ variables.SolutionBaseName }}
      StaxSharedStorageAccountKey: $(dfcdevstaxsharedstr)
      StaxSharedStorageAccountName: $(StaxSharedStorageAccountName)
      StaxSharedStorageAccountResourceGroup: $(StaxSharedResourceGroup)

- stage: DeployToSit
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  variables:
    - group: dfc-shared-all
    - group: dfc-stax-shared-all
    - group: KeyVault - dfc-sit-shared-kv
    - group: dfc-shared-sit
    - group: dfc-stax-shared-sit
    - template: VariableTemplates\SitEnvironmentVariables.yml
  jobs:
  - template: JobTemplates/Deploy.yml
    parameters:
      AksResourceGroup: $(sharedResourceGroup)
      AzureSubscriptionEndpoint: 'SFA-CDH-Dev/Test (962cae10-2950-412a-93e3-d8ae92b17896)'
      CertificateSecretName: $(DatabaseCertificateSecretName)
      Environment: SIT_SERVICETAXONOMY
      EnvironmentTag: $(EnvironmentTag)
      KeyVaultName: $(sharedKeyVaultName)
      KubernetesCluster: $(sharedAksCluster)
      Neo4jPassword: $(Neo4jPassword)
      ParentBusinessTag: $(ParentBusiness)
      ResourceGroup: $(ResourceGroup)
      ServiceOfferingTag: $(ServiceOffering)
      SolutionBaseName: ${{ variables.SolutionBaseName }}
      StaxSharedStorageAccountKey: $(dfcsitstaxsharedstr)
      StaxSharedStorageAccountName: $(StaxSharedStorageAccountName)
      StaxSharedStorageAccountResourceGroup: $(StaxSharedResourceGroup)

- stage: DeployToPP
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  variables:
    - group: dfc-shared-all
    - group: dfc-stax-shared-all
    - group: KeyVault - dfc-pp-shared-kv
    - group: dfc-shared-pp
    - group: dfc-stax-shared-pp
    - template: VariableTemplates\PPEnvironmentVariables.yml
  jobs:
  - template: JobTemplates/Deploy.yml
    parameters:
      AksResourceGroup: $(sharedResourceGroup)
      AzureSubscriptionEndpoint: 'SFA-DIG-PreProd (931bc9f6-359c-4f65-a753-1ee191a1fd6c)'
      CertificateSecretName: $(DatabaseCertificateSecretName)
      Environment: PP_SERVICETAXONOMY
      EnvironmentTag: $(EnvironmentTag)
      KeyVaultName: $(sharedKeyVaultName)
      KubernetesCluster: $(sharedAksCluster)
      Neo4jPassword: $(Neo4jPassword)
      ParentBusinessTag: $(ParentBusiness)
      ResourceGroup: $(ResourceGroup)
      ServiceOfferingTag: $(ServiceOffering)
      SolutionBaseName: ${{ variables.SolutionBaseName }}
      StaxSharedStorageAccountKey: $(dfcppstaxsharedstr)
      StaxSharedStorageAccountName: $(StaxSharedStorageAccountName)
      StaxSharedStorageAccountResourceGroup: $(StaxSharedResourceGroup)


